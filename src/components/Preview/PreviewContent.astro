---
import BlogPost from '@component/Content/BlogPost.astro'
import { markdown } from '@astropub/md'
import type { PostData } from '@utils/preview/githubApi'
import type { Props as AuthorProps } from '@component/Footer/PostFooter.astro'

export interface Props {
  postData: PostData | null
  postContent: string
  authorDetails: AuthorProps | null
  heroImageUrl: string | null
  error: string
}

const { postData, postContent, authorDetails, heroImageUrl, error } =
  Astro.props

let postContentMarkdown = null

try {
  postContentMarkdown = await markdown(postContent)
} catch (error) {
  console.error('Error parsing markdown:', error)
}
---

<div class="mx-auto max-w-5xl">
  {
    error ? (
      <div class="mb-4 rounded border border-red-400 bg-red-100 px-4 py-3 text-red-700">
        <p class="font-bold">Error:</p>
        <p>{error}</p>
      </div>
    ) : postData ? (
      <BlogPost
        title={postData.title}
        tags={postData.tags || []}
        pubDate={postData.pubDate}
        youtube={postData.youtube}
        author={authorDetails}
        legendImage={heroImageUrl}
      >
        {postContentMarkdown ?? 'FUCKED!!'}
      </BlogPost>
    ) : (
      <div class="text-center">
        <p class="text-gray-600">
          Preview post from GitHub publication repository how it will look like
          on the website.
        </p>
      </div>
    )
  }
</div>
