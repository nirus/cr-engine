---
// import EmailSignup from "./Subscribe/EmailSignup.astro";
import Author, {
  Props as AuthorProps,
} from "@Component/Footer/PostFooter.astro";
import { githubUserNameRegex } from "@utils/help";
import { Settings } from "@config/settings";
import { Image } from "@astrojs/image/components";

export interface Props {
  title: string;
  pubDate: string;
  hero?: string;
  youtube?: string;
  author: string;
  tags: string[];
}

const { title, pubDate, hero, youtube, author, tags } = Astro.props;
const isValid: boolean = githubUserNameRegex.test(author);
let ghAuthor: AuthorProps | null = null;

if (isValid) {
  try {
    // const ghProfile = await fetch(`https://api.github.com/users/${author}`, {
    //   headers: {
    //     /* TODO: make this token a secret */
    //     Authorization: "token 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",
    //   },
    // });
    // gh = await ghProfile.json();
    ghAuthor = {
      avatar_url: "https://avatars.githubusercontent.com/u/2213751?v=4",
      name: "Niranjan Kumar",
      company: "@Nirus",
      bio: "Meta thinker",
      html_url: "https://github.com/nirus",
      login: "nirus",
    };
  } catch (e) {
    console.log("Github api: ", e);
  }
}
---

<header class="mx-auto max-w-3xl text-center content">
  <h1 class="text-6xl m-3 leading-normal pb-4">{title}</h1>
</header>
<article
  class="post max-w-5xl mx-auto p-3 lg:border-2 lg:border-stone-200 lg:rounded-lg"
>
  <!-- Image -->
  {
    hero && (
      <Image
        class="rounded-xl mx-auto mb-4"
        width={1024}
        height={640}
        sizes={"100%"}
        loading="lazy"
        src={hero}
        alt={title}
        aspectRatio={"16:9"}
        fit="contain"
        quality={10}
      />
    )
  }

  <!-- YouTube Video -->
  {
    youtube && (
      <div class="embed-responsive aspect-ratio-16/9 mt-6 lg:mt-12">
        <iframe
          width="700"
          height="500"
          class="embed-responsive-item"
          src={`https://www.youtube.com/embed/${youtube}`}
          frameborder="0"
          allow="accelerometer; autoplay; encrypted-media; gyroscope;"
          allowfullscreen
        />
      </div>
    )
  }

  <!-- Content -->
  <section
    class={`${Settings.post.contentWidth} mx-auto py-6 lg:py-4 content px-4`}
  >
    <slot />
  </section>
  <div class="inline-flex align-middle justify-center pb-3 flex-grow-1 w-full">
    <div class="w-full px-2 text-sm">Published: <b>{pubDate}</b></div>
    <div class="w-full px-2 text-sm text-right truncate">
      Tag:
      <b class="capitalize">
        {tags.length ? tags.slice(0, 4).join(", ") : tags[0]}
      </b>
    </div>
  </div>
  {ghAuthor && <Author {...ghAuthor} />}
</article>
