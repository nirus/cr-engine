---
import BaseHead from '@component/Head/BaseHead.astro'
import TopBarNav from '@component/Navigation/TopBar.astro'
import HomeHead from '@component/Head/HomeHead.astro'
import Card from '@component/Content/Card.astro'
import Footer from '@component/Footer/Footer.astro'
import { Settings } from '@config/settings'
import type { Props as BlogPostProps } from '@component/Content/BlogPost.astro'

export interface MarkdownFrontmatter {
  pubDate: Date
  url: string
  frontmatter: BlogPostProps
  file: string
}
const { title, tagline, description } = Settings.site
const allPosts = import.meta.glob<MarkdownFrontmatter>('./posts/**/*.md')

const extractedPosts = await Promise.all(
  Object.values(allPosts).map(
    async (value: () => Promise<MarkdownFrontmatter>) => {
      const post = await value()
      return post
    },
  ),
)

const sortedPosts = extractedPosts
  .slice(0, 3)
  .sort(
    (a, b) =>
      new Date(b.frontmatter.pubDate).valueOf() -
      new Date(a.frontmatter.pubDate).valueOf(),
  )
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
  </head>

  <body class="font-body personality-casual bg-white leading-normal text-black">
    <TopBarNav />

    <main class="py-12">
      <article class="mx-auto max-w-6xl px-3">
        <HomeHead tagline={tagline} />
        <section
          class="grid grid-cols-1 gap-6 py-8 md:grid-cols-2 lg:grid-cols-3"
          data-test="articles-section"
        >
          {
            sortedPosts.map(p => (
              <div class="col-span-1">
                <Card post={p} />
              </div>
            ))
          }
        </section>
      </article>
    </main>

    <section
      class="flex justify-center space-x-8 pt-8 text-center text-xl font-bold"
    >
      <a
        href="/posts"
        data-test="see-all-link"
        class="m-2 border-b-2 border-b-white hover:border-b-gray-800"
      >
        View All &nbsp;&rarr;
      </a>
    </section>

    <Footer />
  </body>
</html>
