---
import BaseHead from "@component/Head/BaseHead.astro";
import TopBarNav from "@component/Navigation/TopBar.astro";
import HomeHeader from "@component/Head/HomeHeader.astro";
import Card from "@component/Content/Card.astro";
import Footer from "@component/Footer/Footer.astro";
import { Settings } from "@config/settings";
import { globby } from "globby";
import { dirname, resolve } from "path";
import fs, { existsSync } from "fs";
import { basename } from "path";
import type { Props } from "@component/Content/Card.astro";
export interface MarkdownFrontmatter {
  pubDate: Date;
}
const { title, tagline, description } = Settings.site;
// const allPosts = await Astro.glob<MarkdownFrontmatter>("./posts/**/*.md");
// const sortedPosts = allPosts
//   .slice(0, 3)
//   .sort(
//     (a, b) =>
//       new Date(b.frontmatter.pubDate).valueOf() -
//       new Date(a.frontmatter.pubDate).valueOf()
//   );

const resolvedPath = resolve("src/pages/posts");
let allPosts: string[] | Array<Props["post"]> = await globby(
  resolvedPath + "/**/claim.json"
);

console.log({ allPosts });

allPosts = allPosts.slice(0, 6).map((file: string) => {
  const claim = JSON.parse(fs.readFileSync(file, "utf8"));
  const dir = dirname(file);

  console.log({ claim });
  return {
    file: dir + "/index.md",
    url: "/posts/" + basename(dir),
    frontmatter: {
      hero:
        (existsSync(dir + "/hero.png") && "hero.png") ||
        (existsSync(dir + "/hero.jpg") && "hero.jpg") ||
        "",
      ...claim,
    },
  };
});

const sortedPosts = (allPosts as Props["post"][]).sort(
  (a, b) =>
    new Date(b.frontmatter.pubDate).valueOf() -
    new Date(a.frontmatter.pubDate).valueOf()
);
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
  </head>

  <body class="bg-white text-black font-body leading-normal personality-casual">
    <TopBarNav />

    <main class="py-12">
      <article class="max-w-6xl mx-auto px-3">
        <HomeHeader title={title} tagline={tagline} />
        <section
          class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 py-8"
          data-test="articles-section"
        >
          {
            sortedPosts.map((p: any) => (
              <div class="col-span-1">
                <Card post={p} />
              </div>
            ))
          }
        </section>
      </article>
    </main>

    <section
      class="flex space-x-8 justify-center text-xl pt-8 font-bold text-center"
    >
      <a
        href="/posts"
        data-test="see-all-link"
        class="m-2 border-b-2 border-b-white hover:border-b-gray-800"
      >
        View All &nbsp;&rarr;
      </a>
    </section>

    <Footer />
  </body>
</html>
