---
/**
 * Remember: Use import to absolute path to prevent linter errors
 * import -> 'src/*'
 */
import BaseHead from '@component/Head/BaseHead.astro'
import TopBarNav from '@component/Navigation/TopBar.astro'
import HomeHeader from '@component/Head/HomeHeader.astro'
import Card from '@component/Content/Card.astro'
import Footer from '@component/Footer/Footer.astro'
import Paginator from '@component/Content/Paginator.astro'
import type { MarkdownFrontmatter } from '@pages/index.astro'
import type { Props as CardProps } from '@component/Content/Card.astro'
import { Settings } from '@config/settings'
import type { GetStaticPathsOptions } from 'astro'

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const allPosts = await Astro.glob<MarkdownFrontmatter>('./**/*.md') // Tracks all the 'src/pages/posts/**/*.md' files
  const sortedPosts = allPosts.sort(
    (a, b) =>
      new Date(b.frontmatter.pubDate).valueOf() -
      new Date(a.frontmatter.pubDate).valueOf(),
  )

  /**
   * stress testing purpose to enable 'prev' and 'next' buttons on pagination
   * Uncomment below code to test fake 100 posts
   */

  /*
   const sorted = paginate(Array(100).fill(sortedPosts[0]), {
    pageSize: 21,
  });
  */

  const sorted = paginate(sortedPosts, {
    pageSize: 21,
  })

  return sorted
}

const { page } = Astro.props
const pageDescription = `page [ ${page.currentPage} ] of all articles`
const seoTitle = `Articles | ${Settings.site.title}`
const seoDescription =
  'Read all the articles written on Coder Rocks. Happy coding!'
---

<html lang="en">
  <head>
    <BaseHead title={seoTitle} description={seoDescription} />
  </head>

  <body class="font-body personality-casual bg-white leading-normal text-black">
    <TopBarNav />

    <main class="py-6 lg:py-10">
      <article class="mx-auto max-w-6xl px-3">
        <HomeHeader
          tagline={pageDescription}
          showLogo={true}
          showHeading={true}
        />
        <section
          class="grid grid-cols-1 gap-6 py-8 md:grid-cols-2 lg:grid-cols-3"
          data-test="articles-section"
        >
          {
            page.data.map((p: CardProps['post']) => (
              <div class="col-span-1">
                <Card post={p} />
              </div>
            ))
          }
        </section>
      </article>
    </main>
    <Paginator page={page} />
    <Footer />
  </body>
</html>
